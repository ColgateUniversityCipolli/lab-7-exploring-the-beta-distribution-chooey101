install.packages("cumstats")
library(tidyverse)
library(e1071)
libary(patchwork)
wb.data <- read_csv("API_SP.DYN.CDRT.IN_DS2_en_csv_v2_76451.csv")
View(wb.data)
wb.data <- read_csv("API_SP.DYN.CDRT.IN_DS2_en_csv_v2_76451.csv",  n_max = Inf)
problems(wb.data)
wb.data <- read_csv("wbdata.csv")
View(wb.data)
wb.data <- read_csv("wbdata.csv") |>
select(67)
View(wb.data)
wb.data <- read_csv("wbdata.csv") |>
select(67) |>
rename("2022dat" = 2022)
colnames(wb.data)
wb.data <- read_csv("wbdata.csv") |>
select(67) |>
rename("2022 data" = "...67")
wb.data <- read_csv("wbdata.csv") |>
select(67) |>
rename("2022_data" = "...67")
wb.data <- read_csv("wbdata.csv") |>
select(67) |>
rename("2022_data" = "...67")
mutate("2022_data" = if_else(row_number() %in% 3:268, "2022_data" / 1000, "2022_data"))
wb.data <- read_csv("wbdata.csv") |>
select(67) |>
rename("2022_data" = "...67")|>
mutate("2022_data" = if_else(row_number() %in% 3:268, "2022_data" / 1000, "2022_data"))
wb.data <- read_csv("wbdata.csv") |>
select(67) |>
rename("2022_data" = "...67")|>
mutate(2022_data = if_else(row_number() %in% 3:268, 2022_data / 1000, 2022_data))
wb.data <- read_csv("wbdata.csv") |>
select(67) |>
rename("2022_data" = "...67")|>
mutate('2022_data' = if_else(row_number() %in% 3:268, '2022_data' / 1000, '2022_data'))
wb.data <- read_csv("wbdata.csv") |>
select(67) |>
rename("2022_data" = "...67")|>
mutate(`2022_data` = if_else(row_number() %in% 3:268, `2022_data` / 1000, `2022_data`))
wb.data <- read_csv("wbdata.csv") |>
select(67) |>
rename("2022_data" = "...67")|>
mutate(`2022_data` = if_else(row_number() %in% 3:268, `2022_data` / 1000, `2022_data`))|>
`2022_data`[-which(wb.data$`2022_data` == 2022), ]
wb.data <- read_csv("wbdata.csv") |>
select(67) |>
rename("2022_data" = "...67")|>
mutate(`2022_data` = if_else(row_number() %in% 3:268, `2022_data` / 1000, `2022_data`))
`2022_data`[-which(wb.data$`2022_data` == 2022), ]
wb.data <- read_csv("wbdata.csv") |>
select(67) |>
rename("2022_data" = "...67")|>
mutate(`2022_data` = if_else(row_number() %in% 3:268, `2022_data` / 1000, `2022_data`))|>
"2022_data"[-which(wb.data$`2022_data` == 2022), ]
wb.data <- read_csv("wbdata.csv")
wb.data <- wb.data[-2, ] |>
select(67) |>
rename("2022_data" = "...67")|>
mutate(`2022_data` = if_else(row_number() %in% 3:268, `2022_data` / 1000, `2022_data`))
wb.data <- read_csv("wbdata.csv")
wb.data <- wb.data[-2, ] |>
select(67) |>
rename("2022_data" = "...67")|>
mutate(`2022_data` = if_else(row_number() %in% 2:267, `2022_data` / 1000, `2022_data`))
wb.data <- read_csv("wbdata.csv")
wb.data <- wb.data[-2, ] |>
select(67) |>
rename("2022_data" = "...67")|>
mutate(`2022_data` = if_else(row_number() %in% 2:267, `2022_data` / 1000, `2022_data`))
##Task 7##
#Method of Moments Function
MOM.beta <- function(data, par){
lambda <- par[1]
EX <- lambda
m1 <- mean(data)
m2 <- mean((data)^2)
estimates <- c(EX-m1,EX-m2)
return (estimates) # Goal: find lambda so this is 0
}
nleqslv(
fn = MOM.pois,
data=wb.data$`2022_data`)
MOM.beta <- function(alpha, beta, data, par){
lambda <- par[1]
EX1 <- (alpha)/(alpha+beta)
EX2 <- ((alpha+1)*alpha)/((alpha+beta+1)*(alpha+beta))
m1 <- mean(data)
m2 <- mean((data)^2)
estimates <- c(EX1-m1,EX2-m2)
return (estimates) # Goal: find lambda so this is 0
}
nleqslv(
fn = MOM.beta,
data=wb.data$`2022_data`)
library(nleqslv)
install.packages("nleqslv")
library(nleqslv)
nleqslv(
fn = MOM.beta,
data=wb.data$`2022_data`)
nleqslv(x=2,
fn = MOM.beta,
data=wb.data$`2022_data`)
MOM.beta <- function(data, par){
alpha <- par[1]
beta <- par[2]
EX1 <- (alpha)/(alpha+beta)
EX2 <- ((alpha+1)*alpha)/((alpha+beta+1)*(alpha+beta))
m1 <- mean(data)
m2 <- mean((data)^2)
estimates <- c(EX1-m1,EX2-m2)
return (estimates) # Goal: find lambda so this is 0
}
#Solve for MOM
nleqslv(x=c(1,1),
fn = MOM.beta,
data=wb.data$`2022_data`)
wb.data$`2022_data`
mean(wb.data$`2022_data`)
